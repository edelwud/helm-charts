# Default values for vm-proxy-auth.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/edelwud/vm-proxy-auth
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

config:
  server:
    address: "0.0.0.0:{{ .Values.service.port }}"
    read_timeout: "30s"
    write_timeout: "30s"
    idle_timeout: "60s"

  upstream:
    url: "https://vmselect:8080"
    timeout: "30s"
    max_retries: 3
    retry_delay: "1s"
    tenant_header: "X-Prometheus-Tenant"
    tenant_label: "vm_account_id"
    project_label: "vm_project_id"
    use_project_id: true

  auth:
    type: "jwt"
    jwks_url: "https://keycloak:8080/realms/staff/protocol/openid-connect/certs"
    jwt_algorithm: "RS256"
    validate_audience: false
    validate_issuer: true
    required_issuer: "https://keycloak:8080/realms/staff"
    required_audience: []
    token_ttl: "1h"
    cache_ttl: "5m"
    user_groups_claim: "groups"

  tenant_mappings:
    - groups: ["developers"]
      vm_tenants:
        - account_id: "2000"
      read_only: false

  metrics:
    enabled: true
    path: "/metrics"

  logging:
    level: "info"
    format: "json"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
readinessProbe:
  httpGet:
    path: /ready
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
